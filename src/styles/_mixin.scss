@mixin button-size($height, $padding, $font-size) {
  padding: $padding;
  font-size: $font-size;
  height: $height;
}

@mixin btn-style(
  $background, 
  $border,
  $color,
  $hover-background: lighten($background, 7.5%),
  $hover-border:lighten($border, 10%),
  $hover-color: $color
) {
  color: $color;
  background: $background;
  border-color: $border;
  &:hover, &:focus, &.focus {
    background: $hover-background;
    border-color: $hover-border;
    color: $hover-color;
  }
}

@mixin button-disabled-style(
  $background,
  $border,
  $color
) {
  &.disabled, &[disabled] {
    color: $color;
    background: $background;
    border-color: $border;
    text-shadow: none;
  }
}

@mixin menu-style(
  $mode
) {
  @if $mode == 'vertical' {
    flex-direction: column;
    margin-bottom: 0px;

    > .menu-item {
      padding: $menu-item-padding-vertical;
      position: relative;
      &::after {
        content: "";
        position: absolute;
        opacity: 0;
        bottom: 0;
        top:0;
        right: 0;
        left: 0;
        background: rgba($primary, 0.2);
        border-right: 3px solid $primary;
        transform: scaleY(0);
        transition: transform 0.3s cubic-bezier(.645,.045,.355,1),opacity 0.3s cubic-bezier(.645,.045,.355,1);
      }

      &.is-active::after {
        opacity: 1;
        transform: scaleY(1);
        transition: transform 0.3s cubic-bezier(.215,.61,.355,1),opacity 0.3s cubic-bezier(.215,.61,.355,1)
      }
      
      &:hover {
        color: $primary;
      }
    }

  } @else if $mode == 'horizontal' {
    flex-direction: row;
    margin-bottom: 30px;
    border-bottom: $menu-border-width solid $menu-border-color;

    > .menu-item {
      padding: .5rem 1rem;
      position: relative;
      margin-bottom: -1px;
      &::after {
        content: "";
        position: absolute;
        opacity: 0;
        bottom: 0;
        top:0;
        right: 0;
        left: 0;
        background: rgba($primary, 0.2);
        border-bottom: 3px solid $primary;
        transform: scaleX(0);
        transition: transform 0.3s cubic-bezier(.645,.045,.355,1),opacity 0.3s cubic-bezier(.645,.045,.355,1);
      }

      &.is-active::after {
        opacity: 1;
        transform: scaleX(1);
        transition: transform 0.3s cubic-bezier(.215,.61,.355,1),opacity 0.3s cubic-bezier(.215,.61,.355,1)
      }
      
      &:hover {
        color: $primary;
      }
    }
  }
}


@mixin subMenu-style(
  $mode
) {
  border-left: $menu-item-active-border-width solid transparent; 
  cursor: pointer;
  transition: $menu-transition;
  position: relative;
  @if $mode == 'horizontal' {
    padding: $menu-item-padding-horizontal;
  } @else if $mode == 'vertical' {
    padding: $menu-item-padding-vertical;
  }

  &.child-selected {
    > .submenu-title {
      color: $menu-item-active-color;
    }
  }
  
  @if $mode == 'horizontal' {
    > &.child-selected {
      border-bottom: $menu-item-active-border-width solid $menu-item-active-color;
    }
  }

  > .submenu-item {
    list-style: none;
    padding: 0;
    white-space: nowrap;
    background: white;
    @if $mode == 'horizontal' {
      min-width: 160px;
      position: absolute;
      box-shadow: $submenu-box-shadow;
      left: 0;
      z-index: 1;
      top: 50px;
    }

    .submenu-item {
      position: absolute;
      top: 0;
      left: 165px;
    }
  }

  .menu-item {
    list-style: none;
    padding: $menu-item-padding-vertical;
    &.is-active, &:hover {
      color: $menu-item-active-color;
    }

    &.is-active {
      background: lighten($primary, 40%);
      border-right: $menu-item-active-border-width solid $menu-item-active-color;
    }
  }
}
